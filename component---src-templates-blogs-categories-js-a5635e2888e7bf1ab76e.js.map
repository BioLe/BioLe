{"version":3,"sources":["webpack:///./src/templates/blogs/categories.js"],"names":["Categories","_ref","edges","data","allMarkdownRemark","React","createElement","Layout","SEO","title","Intro","ContainerLayout","SubTitle","HeaderIntro","SubText","CategoriesTags","className","map","_ref2","node","frontmatter","fields","slug","WorkPost","key","Link","to","Img","fluid","image","childImageSharp","SmallText","UnderLink","href","imageCredit","target","categories","item","index","length","Title","style","boxShadow","Calendar","width","height","date","Clock","time","Text","dangerouslySetInnerHTML","__html","description","excerpt","ReadMore"],"mappings":"8FAAA,yIAqHeA,UA3GI,SAAHC,GAAkB,IACxBC,EADgBD,EAAJE,KACEC,kBAAdF,MAKR,OACEG,IAAAC,cAACC,IAAM,KACLF,IAAAC,cAACE,IAAG,CAACC,MAAM,mBACXJ,IAAAC,cAACI,IAAK,KACJL,IAAAC,cAACK,IAAe,KAEdN,IAAAC,cAACM,IAAQ,KAAC,YAGVP,IAAAC,cAACO,IAAW,KACVR,IAAAC,cAACQ,IAAO,KAAC,qNAGTT,IAAAC,cAACS,IAAc,OAGjBV,IAAAC,cAACK,IAAe,CAACK,UAAU,WACxBd,EAAMe,KAAI,SAAAC,GAAe,IAAZC,EAAID,EAAJC,KACNV,EAAQU,EAAKC,YAAYX,OAASU,EAAKE,OAAOC,KACpD,OACEjB,IAAAC,cAACiB,IAAQ,CAACC,IAAKL,EAAKE,OAAOC,MACzBjB,IAAAC,cAAA,OAAKU,UAAU,SACbX,IAAAC,cAAA,OAAKU,UAAU,iBACbX,IAAAC,cAACmB,OAAI,CAACC,GAAIP,EAAKE,OAAOC,MACpBjB,IAAAC,cAACqB,IAAG,CAACC,MAAOT,EAAKC,YAAYS,MAAMC,gBAAgBF,MAAOnB,MAAM,iBAGpEJ,IAAAC,cAACyB,IAAS,KAAC,kBAET1B,IAAAC,cAAC0B,IAAS,CAACC,KAAMd,EAAKC,YAAYc,YAAaC,OAAO,SAAS1B,MAAM,gBAClEU,EAAKC,YAAYc,eAKxB7B,IAAAC,cAAA,OAAKU,UAAU,WACbX,IAAAC,cAAA,cACED,IAAAC,cAACyB,IAAS,KACR1B,IAAAC,cAAA,QAAMU,UAAU,gBAAgBG,EAAKC,YAAYgB,WAAWnB,KAAI,SAACoB,EAAMC,GAAK,OAC1EjC,IAAAC,cAACmB,OAAI,CAACC,GAAE,IAAMW,EAAQb,IAAKc,GACzBjC,IAAAC,cAAA,QAAMU,UAAU,4CAA2C,IAAEqB,GAC5DlB,EAAKC,YAAYgB,WAAWG,SAAWD,EAAQ,EAAIjC,IAAAC,cAAA,QAAMU,UAAU,6BAA4B,OAAa,OAE9G,MAELX,IAAAC,cAACkC,IAAK,KACJnC,IAAAC,cAACmB,OAAI,CAACT,UAAU,eAAeyB,MAAO,CAAEC,UAAU,QAAWhB,GAAIP,EAAKE,OAAOC,MAC1Eb,IAGLJ,IAAAC,cAACyB,IAAS,KACR1B,IAAAC,cAACqC,IAAQ,CAAC3B,UAAU,4BAA4B4B,MAAM,KAAKC,OAAO,OAClExC,IAAAC,cAAA,QAAMU,UAAU,gBAAe,qBAAmBG,EAAKC,YAAY0B,KAAK,MAE1EzC,IAAAC,cAACyB,IAAS,KACR1B,IAAAC,cAACyC,IAAK,CAAC/B,UAAU,4BAA4B4B,MAAM,KAAKC,OAAO,OAC/DxC,IAAAC,cAAA,QAAMU,UAAU,gBAAe,gBAAcG,EAAKC,YAAY4B,KAAK,OAGvE3C,IAAAC,cAAC2C,IAAI,CACHC,wBAAyB,CACvBC,OAAQhC,EAAKC,YAAYgC,aAAejC,EAAKkC,WAGjDhD,IAAAC,cAACmB,OAAI,CAACC,GAAIP,EAAKE,OAAOC,MACpBjB,IAAAC,cAACgD,IAAQ,CAACtC,UAAU,cAAa","file":"component---src-templates-blogs-categories-js-a5635e2888e7bf1ab76e.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link, graphql } from \"gatsby\"\nimport { Calendar, Clock } from 'react-feather'\nimport Img from \"gatsby-image\"\nimport CategoriesTags from '../../components/CategoriesTags/categoriesTags';\nimport {ContainerLayout, WorkPost, Intro, SubTitle, Title, Text, HeaderIntro, SubText, SmallText, UnderLink, ReadMore} from \"../../components/common\"\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\n\nconst Categories = ({ data }) => {\n  const { edges} = data.allMarkdownRemark\n  // const tagHeader = `${totalCount} post${\n  //   totalCount === 1 ? \"\" : \"s\"\n  // } tagged with \"${category}\"`\n\n  return (\n    <Layout> \n      <SEO title=\"Blog Home Page\" />\n      <Intro>\n        <ContainerLayout>\n\n          <SubTitle>\n            Articles\n          </SubTitle>\n          <HeaderIntro>\n            <SubText>\n              Articles on front-end design engineering, focused on HTML, CSS, SVG, accessiblity, and everything in between, with practical tips from real projects. Included here are links to articles published on magazines.\n            </SubText>\n            <CategoriesTags /> \n          </HeaderIntro>\n\n          <ContainerLayout className=\"wrapper\">\n            {edges.map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug\n              return (\n                <WorkPost key={node.fields.slug}>\n                  <div className=\"media\">\n                    <div className=\"image-wrapper\">\n                      <Link to={node.fields.slug}>\n                        <Img fluid={node.frontmatter.image.childImageSharp.fluid} title=\"work title\" />\n                      </Link> \n                    </div>\n                    <SmallText>\n                      Image Credits : \n                      <UnderLink href={node.frontmatter.imageCredit} target=\"_blank\" title=\"image credit\">\n                        {node.frontmatter.imageCredit}\n                      </UnderLink>\n                    </SmallText>\n                  </div>\n                  \n                  <div className=\"content\">\n                    <header>\n                      <SmallText> \n                        <span className=\"align-middle\">{node.frontmatter.categories.map((item, index) => (\n                          <Link to={`/${item}`} key={index}>\n                            <span className=\"align-middle text-primary text-underline\">#{item}</span>\n                            {node.frontmatter.categories.length !== index + 1 ? <span className=\"align-middle text-primary\"> , </span> : \"\"}\n                          </Link>\n                        ))} </span>\n                      </SmallText>\n                      <Title>\n                        <Link className=\"text-primary\" style={{ boxShadow: `none` }} to={node.fields.slug}>\n                          {title}\n                        </Link>\n                      </Title>\n                      <SmallText> \n                        <Calendar className=\"align-middle text-primary\" width=\"18\" height=\"18\" /> \n                        <span className=\"align-middle\"> date published : {node.frontmatter.date} </span>\n                      </SmallText>\n                      <SmallText> \n                        <Clock className=\"align-middle text-primary\" width=\"18\" height=\"18\" /> \n                        <span className=\"align-middle\"> read time : {node.frontmatter.time} </span>\n                      </SmallText>\n                    </header>\n                    <Text\n                      dangerouslySetInnerHTML={{\n                        __html: node.frontmatter.description || node.excerpt,\n                      }}\n                    />\n                    <Link to={node.fields.slug}>\n                      <ReadMore className=\"lined-link\"> read more &#8594; </ReadMore>\n                    </Link>\n                  </div>\n                </WorkPost>\n              )\n            })}\n          </ContainerLayout>\n        </ContainerLayout>\n      </Intro>\n    </Layout>\n  )\n}\n\nCategories.propTypes = {\n  pageContext: PropTypes.shape({\n    category: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Categories\n\nexport const pageQuery = graphql`\n  query($category: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { in: [$category] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            time\n            title\n            image {\n              childImageSharp {\n                fluid(maxWidth: 600, quality: 100) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            categories\n            imageCredit\n            description\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}